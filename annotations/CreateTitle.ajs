 
// # Variables  
  
var x = 10 ;  
var y = 10 ;  
var default_width = 30 ;
var default_height = 30 ;
var typesList = [] ;
var pictogram_x = x;// + 10 ;
var label_x = x;// + pictogram_x + 10 ;
var label_width = default_width + 10 ;
var groupWidth = /*10 + default_width*/ + default_width /*+ 10*/ ;
var groupHeight = default_height + y ;
var prefix = "" ;
var groupName = "Legend" ;
var noteFigureType = 0 ;
var noteOpacity = 255 ;
var noteOutlineOpacity  = 255 ;
var defaultFontSize = 10;

// Get Archi's Preference Store
const archiPrefs = Java.type('com.archimatetool.editor.ArchiPlugin').PREFERENCES;

// Declare the Eclipse FontData class
// See https://github.com/eclipse-platform/eclipse.platform.swt/blob/master/bundles/org.eclipse.swt/Eclipse%20SWT/gtk/org/eclipse/swt/graphics/FontData.java
const FontDataClass = Java.type('org.eclipse.swt.graphics.FontData');

// Get the default font string for diagram objects
var defaultViewFont = archiPrefs.getString('defaultViewFont');
let defaultFontName = "monospace";
let Font = Java.type("java.awt.Font");
let defaultFontStyle = Font.PLAIN;

// If we have it...
if(defaultViewFont) {
  let fontData = new FontDataClass(defaultViewFont);
  defaultFontSize = Math.floor(fontData.getHeight() * 1.3);
  defaultFontName = fontData.getName();
  defaultFontStyle = fontData.getStyle();
}

// # Main

    
console.show();  
console.clear();  
console.log("> Generate diagram legend:");  
  
let currentView  = $(selection).filter("archimate-diagram-model").first();//= selection.first();
if (! currentView) {  
    console.log("> No view identified: exiting.");  
    exit();  
}

function _legendStringWidth(nodeLabel) {  
  let Canvas = Java.type("java.awt.Canvas");
  let font = new Font(defaultFontName, defaultFontStyle, defaultFontSize);
  let c = new Canvas();
  let fm = c.getFontMetrics(font);

  return fm.stringWidth("Title: " + nodeLabel);
}

label_width = label_width + 20 + _legendStringWidth(currentView.name)

let currentNote = currentView.createObject("diagram-model-note", pictogram_x + label_x, y, label_width + 20, default_height) ;
currentNote.fontSize = defaultFontSize
currentNote.text = "Title: " + currentView.name
currentNote.deriveLineColor = false
currentNote.lineColor = "#FFFFFF"
currentNote.fontStyle = "bold"

console.log("> Ending properly");
